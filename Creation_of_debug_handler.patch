Index: src/main/java/com/devsteady/onyx/debug/DebugHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/devsteady/onyx/debug/DebugHandler.java	(date 1522535058000)
+++ src/main/java/com/devsteady/onyx/debug/DebugHandler.java	(date 1522535058000)
@@ -0,0 +1,54 @@
+package com.devsteady.onyx.debug;
+
+import com.devsteady.onyx.chat.Chat;
+import com.devsteady.onyx.player.Players;
+import lombok.Getter;
+import lombok.Setter;
+import org.bukkit.entity.Player;
+import org.bukkit.plugin.Plugin;
+import org.bukkit.plugin.PluginLogger;
+
+import java.util.Set;
+import java.util.logging.Logger;
+import java.util.stream.Stream;
+
+/**
+ * Debug handler defines what actions to perform when Chat.debug is called.
+ * <p>
+ * This allows debugger to go to log files, players, globally, give players a mode, or something along those lines.
+ */
+public class DebugHandler {
+
+    @Getter
+    @Setter
+    private Logger logger = null;
+
+    @Getter
+    private Plugin parent;
+
+    @Getter
+    private boolean lateInitialization = false;
+
+    public DebugHandler(Plugin parent) {
+        this.parent = parent;
+
+        if (!isLateInitialization()) {
+            init();
+        }
+    }
+
+    /**
+     * Calling this void will initialize the logger for the instance of DebugHandler
+     */
+    public void init() {
+        logger = new PluginLogger(getParent());
+        logger.setUseParentHandlers(true);
+    }
+
+    public void process(String... messages) {
+        Set<Player> playersInDebugMode = Players.getAllDebugging();
+        Chat.messageAll(playersInDebugMode, messages);
+
+        Stream.of(messages).forEach(msg -> logger.info(msg));
+    }
+}
Index: src/main/java/com/devsteady/onyx/plugin/BukkitPlugin.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/devsteady/onyx/plugin/BukkitPlugin.java	(date 1520017336000)
+++ src/main/java/com/devsteady/onyx/plugin/BukkitPlugin.java	(date 1522535058000)
@@ -1,20 +1,19 @@
 package com.devsteady.onyx.plugin;
 
-import com.devsteady.onyx.chat.Chat;
-import com.devsteady.onyx.command.Command;
 import com.devsteady.onyx.command.CommandHandler;
 import com.devsteady.onyx.debug.DebugAction;
+import com.devsteady.onyx.debug.DebugHandler;
 import com.devsteady.onyx.debug.Debugger;
 import com.devsteady.onyx.game.gadget.Gadget;
 import com.devsteady.onyx.game.gadget.Gadgets;
 import com.devsteady.onyx.item.ItemMessage;
-import com.devsteady.onyx.player.Players;
 import com.devsteady.onyx.threading.RunnableManager;
+import lombok.Getter;
+import lombok.Setter;
 import org.bukkit.event.Listener;
 import org.bukkit.plugin.PluginLogger;
 import org.bukkit.plugin.java.JavaPlugin;
 
-import java.util.logging.Level;
 import java.util.logging.Logger;
 
 
@@ -28,9 +27,18 @@
 
 	private CommandHandler commandHandler;
 
+	/**
+	 * Debug Handler defines the actions to take when performing a debug.
+	 **/
+	@Getter
+	@Setter
+	private DebugHandler debugHandler = null;
+
 	public void onEnable() {
 		initLogger();
 
+		debugHandler = new DebugHandler(this);
+
         /*
 		Create the command handler for annotation-based commands.
          */
@@ -108,10 +116,7 @@
 	}
 
 	public void debug(String... message) {
-		Chat.messageAll(Players.getAllDebugging(), message);
-		for (String m : message) {
-			logger.log(Level.INFO, m);
-		}
+		getDebugHandler().process(message);
 	}
 
 	public Logger getPluginLogger() {
